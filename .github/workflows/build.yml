name: Python Pygame Build

on:
  push:
    branches: [ "main" ]
  
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    runs-on: ${{matrix.os}}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.13.3'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install -r requirements-dev.txt

      - name: Build for Windows
        if: runner.os == 'Windows'
        run: pyinstaller --noconsole --onefile --windowed --name "AsteroidsGame.exe" main.py

      - name: Build for Linux
        if: runner.os == 'Linux'
        run: pyinstaller --noconsole --onefile --windowed --name "AsteroidsGameUbuntu" main.py

      - name: Build for macOS
        if: runner.os == 'macOS'
        run: pyinstaller --noconsole --onefile --windowed --name "AsteroidsGameMac" main.py

      # 5. Uploads the compiled executable as a build artifact
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: AsteroidsGame-${{ matrix.os }} # The name of the artifact to be uploaded
          path: dist/ # The path to the file(s) to upload. PyInstaller puts the exe in the 'dist' folder.